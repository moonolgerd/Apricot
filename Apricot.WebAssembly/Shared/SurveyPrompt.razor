@using System.Timers
@using Apricot.Data
@using System.Diagnostics
@using static Apricot.Data.ApricotService
@inject ApricotServiceClient ApricotServiceClient
@inject IToastService ToastService
@inject Blazor.Notifications.NotificationService NotificationService

@implements IDisposable

<div class="alert alert-primary mt-4" role="alert">
    <span class="oi oi-arrow-top mr-2" aria-hidden="true"></span>
    <strong>@Title</strong>

    <div>
        Hello, stranger!
        <br />
        Do you like apricots?
        If you do, this website will help you learn a bit about these delicious fruits.
        @Data
    </div>
    @if (Apricots != null)
    {
        <ul>
            @foreach (var apricot in Apricots)
            {
                <li style="color:@apricot.Name.Replace(" Apricot", "")">@apricot.Name of family @apricot.Family</li>
            }
        </ul>
    }
    <div>@Latest</div>
    <button class="btn btn-info" @onclick="OnShowHtml">Info Toast</button>
</div>

@code {
    [Parameter]
    public string Title { get; set; }
    private IEnumerable<Data.Apricot> Apricots { get; set; }
    private DateTime Latest { get; set; }
    private Timer timer;
    private int data = 0;

    private int Data
    {
        get => data;
        set
        {
            data = value;
            StateHasChanged();
        }
    }

    protected override async Task OnInitializedAsync()
    {
        var sw = Stopwatch.StartNew();
        Apricots = (await ApricotServiceClient.GetApricotsAsync(new ApricotRequest())).Apricots;
        sw.Stop();
        Console.WriteLine(sw.Elapsed);

        if (timer == null)
        {
            timer = new Timer(2000);
            timer.Elapsed += Elapsed;
            timer.Start();
        }
    }

    private void Elapsed(object sender, ElapsedEventArgs e)
    {
        Data += 10;
        Latest = DateTime.Now;
    }

    private async Task OnShowHtml()
    {
        RenderFragment message =
    @<text>Info Toast with <strong>bold</strong> text</text>
    ;
        ToastService.ShowToast(ToastLevel.Warning, message);

        await NotificationService.CreateAsync("Hello from Blazor Notifier");
    }

    public void Dispose()
    {
        timer.Dispose();
    }
}
